---
- hosts: all
  gather_facts: no
  become: yes
  become_method: sudo
  vars:
    jenkins_ip: localhost
    jenkins_port: 8080
    jenkins_user: "jenkins"
    jenkins_home: "/var/lib/jenkins"
    jenkins_username: "rshah8"
    jenkins_password: "rshah8"
    jenkins:
      url_username: "{{jenkins_username}}"
      validate_certs: no

  
  tasks:

  - name: install maven (and other packages if needed)
    apt: pkg={{ item }} state=latest update_cache=yes 
    with_items:
      - maven
      - git

  - name: ensure required packages are installed for Java 7
    apt: name=python-software-properties

  - name: Add Java repository to sources
    apt_repository: repo='ppa:webupd8team/java'

  - name: Autoaccept license for Java
    action: shell echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections


  - name: Install Java 8
    apt: name=oracle-java8-installer force=yes
    
  - name: Downloading jenkins
    apt_key:
      url: "http://pkg.jenkins.io/debian/jenkins-ci.org.key"
      state: present
      validate_certs: no

  - name: Updating jenkins source list
    shell: sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'

  - name: Updating APT package cache
    action: apt update_cache=yes

  - name: Installing Jenkins
    apt:
      name: jenkins
      state: present
      install_recommends: yes

  # Update config file of jenkins
  - name: Modify the config file
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: "{{ jenkins_user }}"
      group: "{{ jenkins_user }}"
      mode: 0777
    with_items:
      - { src: './jenkins.xml', dest: '/var/lib/jenkins/config.xml' }
    # Change the source path according to where the config file is.

    # Setting jenkins as the owner of every job
  - name: Change jenkins permission
    file: dest=/var/lib/jenkins/workspace state=directory
           owner={{ jenkins_user }}
           group={{ jenkins_user }}
           mode=0775
           recurse=yes

    # Restart Jenkins server after changing owner
  - name: Restart Jenkins
    service:
      name: jenkins
      state: restarted

    #Wait for Jenkins server to restart
  - wait_for:
      timeout: 15

  # - name: Bypass - jenkins.install.InstallUtil.lastExecVersion
  #   copy: src={{ jenkins_home }}/jenkins.install.UpgradeWizard.state
  #         dest={{ jenkins_home }}/jenkins.install.InstallUtil.lastExecVersion
  #         owner={{ jenkins_user }}
  #         group={{ jenkins_user }}
  #         remote_src=True


  ## Fix to bypass setup wizard https://github.com/geerlingguy/ansible-role-jenkins/issues/50
  - name: Create a directory for Groovy
    file:
      path: "/var/lib/jenkins/init.groovy.d"
      state: directory
      mode: 0777
   
  - name: Create a template xml file for Jenkins checkbox build job
    template: 
      src: ./jenkins_script.groovy.j2 
      dest: /var/lib/jenkins/init.groovy.d/basic-security.groovy 
      mode: 0777

  - name: Restart Jenkins (creates user through startup script)
    service:
      name: jenkins
      state: restarted

  - wait_for:
      timeout: 15

  - name: Remove User-Creation Script
    file:
      path: "/var/lib/jenkins/init.groovy.d/basic-security.groovy"
      state: absent
   
  - name: Install Jenkin Plugins
    jenkins_plugin:
      name: "{{ item }}"
      params: "{{ jenkins }}"
      url_password: "{{jenkins_password}}"
      url: "http://{{jenkins_ip}}:{{jenkins_port}}"
    with_items:
      - github
      - postbuildscript
      - postbuild-task
      - ws-cleanup
   
  - name: Restart Jenkins (for plugins)
    service:
      name: jenkins
      state: restarted

  - wait_for:
      timeout: 15

