---

- name: Upload directory to Deployment host
  synchronize: src=./provision/ dest=~/deploy rsync_opts="--chmod=F666"

- name: Upload Monitoring to Deployment host
  synchronize: src=files/monitoring/ dest=~/monitoring rsync_opts="--chmod=F666"

- name: copy main.js of mnitoring with IP addresses.
  template:
    src: main.js
    dest: ~/monitoring/main.js

- name: NPM install 
  npm:
    path: "~/monitoring"
    state: present

- name: Start HTTP-Server on port 5000 for monitoring
  shell: ( (http-server -p 5000) & )
  args:
    chdir: ~/monitoring/www

- name: "Install forever"
  npm: 
    name: forever 
    global: yes 
    state: present

- name: Start monitoring
  shell: "forever start main.js"
  args:
    chdir: ~/monitoring

- name: Copy inventory of all 5 nodes
  template:
    src: inventory.j2
    dest: ~/inventoryiTrust

- name: Configuring mysqld.conf
  lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    line: '#bind-address           = 127.0.0.1'
    regexp: '^bind-address' 

- name: Restart mysql service
  service: name=mysql state=restarted

# - include_vars: ../../../secrets.yml
- name: Download Jenkins CLI
  get_url:
    url: http://{{ jenkins_ip }}:{{ jenkins_port }}/jnlpJars/jenkins-cli.jar
    dest: /var/lib/jenkins/

- name: Install Jenkins Job Builder using PIP
  pip:
    name: jenkins-job-builder
    state: latest

- name: Copy ini file to the directory
  template:
    src: templates/jenkins_jobs.ini
    dest: /etc/jenkins_jobs/

- name: Make jobs directory
  file:
    path: jobs
    state: directory
    mode: 0777

- name: Copy iTrust job builder file
  template:
    src: templates/itrust-job.yaml
    dest: jobs/

- name: Copy pre-push
  template: 
    src: pre-push.j2 
    dest: /tmp/post-receive

- name: Add git config
  shell: git config --global user.email "rshah8@ncsu.edu"

- name: Add git config
  shell: git config --global user.name "Rohil Shah"

- name: Copy db.properties
  template: 
    src: db.properties.j2 
    dest: /tmp/db.properties

- name: Copy hibernate.properties
  template: 
    src: hibernate.properties.j2 
    dest: /tmp/hibernate.properties

- name: Copy email.properties
  template: 
    src: email.properties.template 
    dest: /tmp/email.properties

- name: Copy pom.xml
  template: 
    src: pom-data.xml 
    dest: /tmp/pom-data.xml

- name: Copy pom_original.xml
  template: 
    src: pom_original.xml 
    dest: /tmp/pom_original.xml  

- name: Add the jobs
  shell: jenkins-jobs update jobs

- name: Build iTrust job
  shell: "java -jar /var/lib/jenkins/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ build {{jenkins_iTrust}} --username {{jenkins_username}} --password {{jenkins_password}} -s"
