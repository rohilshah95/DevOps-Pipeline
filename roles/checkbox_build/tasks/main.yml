---
# tasks file for checkbox_build
- include_vars: ../../../secrets.yml
- name: Download Jenkins CLI
  get_url:
    url: http://{{ jenkins_ip }}:{{ jenkins_port }}/jnlpJars/jenkins-cli.jar
    dest: '/var/lib/jenkins/'

- name: Upload directory to Deployment host
  synchronize: src=./provision/ dest=~/deploy rsync_opts="--chmod=F666"

- name: Fix MongoIP for single mongodb instance
  template:
    src: main.yml.j2
    dest: ~/deploy/roles/env/tasks/main.yml

- name: Copy inventory of both nodes
  template:
    src: inventory.j2
    dest: ~/inventoryCheckbox

- name: Copy Load Balancer JS file
  template: 
    src: loadBalancer.js
    dest: ~/loadBalancer.js

- name: Copy Load Balancer JS file
  template: 
    src: package.json
    dest: ~/package.json

- name: NPM install 
  npm:
    path: "~/"
    state: present

- name: "Install forever"
  npm: 
    name: forever 
    global: yes 
    state: present

- name: Make tmp directory
  file:
    path: /tmp/coverage
    state: directory
    mode: 0777

- name: Copy post-receive
  template: 
    src: pre-push.j2 
    dest: /tmp/post-receive


# - name: Checkbox build config
  # template: src=checkbox_config.j2 dest=/tmp/coverage/checkbox_config.xml

- name: Add jenkins user to Sudoers
  lineinfile:
    dest: /etc/sudoers
    line: 'jenkins ALL=(ALL) NOPASSWD: ALL'

- name: Install Jenkins Job Builder using PIP
  pip:
    name: jenkins-job-builder
    state: latest

- name: Copy ini file to the directory
  template:
    src: templates/jenkins_jobs.ini
    dest: /etc/jenkins_jobs/

- name: Make jobs directory
  file:
    path: jobs
    state: directory
    mode: 0777

- name: Copy checkbox job builder file
  template:
    src: templates/checkbox.yaml
    dest: jobs/

- name: Add the jobs
  shell: jenkins-jobs update jobs

# - name: Check if job already made
#   shell: "java -jar /var/lib/jenkins/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ list-jobs --username {{jenkins_username}} --password {{jenkins_password}}"
#   register: jenkins_check

# - name: Create Job
#   shell: "java -jar /var/lib/jenkins/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ create-job {{jenkins_checkbox}} < /tmp/coverage/checkbox_config.xml --username {{jenkins_username}} --password {{jenkins_password}}"
#   when: jenkins_check.stdout.find(jenkins_checkbox)==-1

- name: Start load balancer
  shell: "forever start loadBalancer.js"

- name: Build checkbox job
  shell: "java -jar /var/lib/jenkins/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ build {{jenkins_checkbox}} --username {{jenkins_username}} --password {{jenkins_password}} -s"
